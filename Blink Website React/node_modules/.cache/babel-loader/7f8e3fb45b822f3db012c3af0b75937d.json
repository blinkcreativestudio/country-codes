{"ast":null,"code":"var _jsxFileName = \"/Users/blinkstudio/Documents/Blink Website/blink-website/blink-website/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from './Button';\nimport { Link } from 'react-router-dom';\nimport { NavbarItems } from './NavbarItems';\nimport './Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Navbar() {\n  _s();\n\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n\n  const handleClick = () => setClick(!click);\n\n  const closeMobileMenu = () => setClick(false);\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    showButton();\n  }, []);\n  window.addEventListener('resize', showButton);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"navbar-logo\",\n          onClick: closeMobileMenu,\n          children: [\"TRVL\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"fab fa-typo3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-icon\",\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: click ? faXmark : faBars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: click ? 'nav-menu active' : 'nav-menu',\n          children: NavbarItems.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: item.url,\n                className: item.cName,\n                onClick: closeMobileMenu,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 25\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), button && /*#__PURE__*/_jsxDEV(Button, {\n          buttonStyle: \"btn--outline\",\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Navbar, \"EqlzfYvNuhCpyFO/Zqcs1qcdUu4=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/blinkstudio/Documents/Blink Website/blink-website/blink-website/src/components/Navbar.js"],"names":["React","useState","useEffect","FontAwesomeIcon","faXmark","faBars","Button","Link","NavbarItems","Navbar","click","setClick","button","setButton","handleClick","closeMobileMenu","showButton","window","innerWidth","addEventListener","map","item","index","url","cName","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mCAAhC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,cAAP;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMa,WAAW,GAAG,MAAMH,QAAQ,CAAC,CAACD,KAAF,CAAlC;;AACA,QAAMK,eAAe,GAAG,MAAMJ,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACvB,QAAIC,MAAM,CAACC,UAAP,IAAqB,GAAzB,EAA8B;AAC5BL,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GAND;;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAC,EAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,UAAlC;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC,aAAvB;AAAqC,UAAA,OAAO,EAAED,eAA9C;AAAA,0CAEE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,OAAO,EAAED,WAApC;AAAA,iCACE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEJ,KAAK,GAAGN,OAAH,GAAaC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAI,UAAA,SAAS,EAAEK,KAAK,GAAG,iBAAH,GAAuB,UAA3C;AAAA,oBACGF,WAAW,CAACY,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9B,gCACI;AAAgB,cAAA,SAAS,EAAC,UAA1B;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAED,IAAI,CAACE,GAAf;AAAoB,gBAAA,SAAS,EAAEF,IAAI,CAACG,KAApC;AAA2C,gBAAA,OAAO,EAAET,eAApD;AAAA,0BACKM,IAAI,CAACI;AADV;AAAA;AAAA;AAAA;AAAA;AADJ,eAASH,KAAT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAOH,WARA;AADH;AAAA;AAAA;AAAA;AAAA,gBARF,EAmBGV,MAAM,iBAAI,QAAC,MAAD;AAAQ,UAAA,WAAW,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBb;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2BD;;GAhDQH,M;;KAAAA,M;AAkDT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from './Button';\nimport { Link } from 'react-router-dom';\nimport { NavbarItems } from './NavbarItems';\nimport './Navbar.css';\n\nfunction Navbar() {\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    showButton();\n  }, []);\n\n  window.addEventListener('resize', showButton);\n\n  return (\n    <>\n      <nav className='navbar'>\n        <div className='navbar-container'>\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n            TRVL\n            <FontAwesomeIcon icon=\"fab fa-typo3\"/>\n          </Link>\n          <div className='menu-icon' onClick={handleClick}>\n            <FontAwesomeIcon icon={click ? faXmark : faBars}/>\n          </div>\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n            {NavbarItems.map((item, index) => {\n                return(\n                    <li key={index} className=\"nav-item\">\n                        <Link to={item.url} className={item.cName} onClick={closeMobileMenu}>\n                            {item.title}\n                        </Link>\n                    </li>\n                );\n            })}\n          </ul>\n          {button && <Button buttonStyle='btn--outline'>SIGN UP</Button>}\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}