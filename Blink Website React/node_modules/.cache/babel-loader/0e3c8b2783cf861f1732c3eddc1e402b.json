{"ast":null,"code":"var _jsxFileName = \"/Users/blinkstudio/Documents/Blink Website/blink-website/blink-website/src/components/pages/Showreel.js\";\nimport { cleanup } from \"@testing-library/react\";\nimport React, { useEffect } from \"react\";\nimport './Showreel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Showreel(props) {\n  // const closeOnEscapeKeyDown = (event) => {\n  //     if((event.charCode || event.keyCode) === 27) {\n  //         props.close();\n  //     }\n  // }\n  // useEffect(() => {\n  //     document.body.addEventListener('keydown', closeOnEscapeKeyDown);\n  //     return function cleanup() {\n  //         document.body.removeEventListener('keydown', closeOnEscapeKeyDown);\n  //     }\n  // }, []);\n  if (!props.show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: props.close,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"video-container\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"close close-cursor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        src: \"/assets/BCS_Showreel.mp4\",\n        type: \"video/mp4\",\n        controls: true,\n        preload: \"metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.close,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Showreel;\nexport default Showreel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Showreel\");","map":{"version":3,"sources":["/Users/blinkstudio/Documents/Blink Website/blink-website/blink-website/src/components/pages/Showreel.js"],"names":["cleanup","React","useEffect","Showreel","props","show","close","e","stopPropagation"],"mappings":";AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AACtB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAG,CAACA,KAAK,CAACC,IAAV,EAAe;AACX,WAAO,IAAP;AACH;;AAED,sBACI;AAAK,IAAA,OAAO,EAAED,KAAK,CAACE,KAApB;AAAA,2BACI;AAAK,MAAA,KAAK,EAAC,iBAAX;AAA6B,MAAA,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACC,eAAF,EAA3C;AAAA,8BACI;AAAM,QAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,GAAG,EAAC,0BAAX;AAAsC,QAAA,IAAI,EAAC,WAA3C;AAAuD,QAAA,QAAQ,MAA/D;AAAgE,QAAA,OAAO,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEJ,KAAK,CAACE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;KA3BQH,Q;AA6BT,eAAeA,QAAf","sourcesContent":["import { cleanup } from \"@testing-library/react\";\nimport React, { useEffect } from \"react\";\nimport './Showreel.css';\n\nfunction Showreel (props) {\n    // const closeOnEscapeKeyDown = (event) => {\n    //     if((event.charCode || event.keyCode) === 27) {\n    //         props.close();\n    //     }\n    // }\n\n    // useEffect(() => {\n    //     document.body.addEventListener('keydown', closeOnEscapeKeyDown);\n    //     return function cleanup() {\n    //         document.body.removeEventListener('keydown', closeOnEscapeKeyDown);\n    //     }\n    // }, []);\n\n    if(!props.show){\n        return null;\n    }\n    \n    return(\n        <div onClick={props.close}>\n            <div class=\"video-container\" onClick={e => e.stopPropagation()}>\n                <span class=\"close close-cursor\"></span>\n                <video src=\"/assets/BCS_Showreel.mp4\" type='video/mp4' controls preload=\"metadata\"></video>\n                <button type='button' onClick={props.close}>Close</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Showreel; "]},"metadata":{},"sourceType":"module"}